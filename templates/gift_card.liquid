{% layout none %}

<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
<head>
  	<meta charset="utf-8">
  	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  	<meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0">
  	<meta name="theme-color" content="{{ settings.color_brand }}">
  	<link rel="canonical" href="{{ canonical_url }}">

	{% render 'network' %}

  	{% if settings.favicon != blank %}
	    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
	{% endif %}

  	<!-- Title and description ================================================== -->
  	{%- assign formatted_initial_value = gift_card.initial_value | money_without_trailing_zeros: gift_card.currency -%}
  	{%- assign formatted_initial_value_stripped = formatted_initial_value | strip_html -%}
  	<title>{{ 'gift_cards.issued.title_html' | t: value: formatted_initial_value_stripped, shop: shop.name }}</title>

  	<meta name="description" content="{{ 'gift_cards.issued.subtext' | t }}">

  	<!-- JS before CSSOM =================================================== -->
  	<script type="text/javascript">
		theme = {};
		theme.t = {};
		theme.map = {};
		theme.map_settings_url="{{ 'map_settings.min.js' | asset_url }}";
		theme.cart_type = '{{ settings.cart_type }}';
		theme.cart_ajax = {% if settings.cart_type == 'modal' or settings.cart_type == 'notification' %}true{% else %}false{% endif %};
	</script>
  	<script type="text/javascript">
		function supportsFontFace() {
			function blacklist() {
				var match = /(WebKit|windows phone.+trident)\/(\d+)/i.exec(navigator.userAgent);
				return match && parseInt(match[2], 10) < (match[1] == 'WebKit' ? 533 : 6);
			}
			function hasFontFaceSrc() {
				var style = document.getElementById('fontsupporttest');
				var sheet = style.sheet || style.styleSheet;
				var cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';
				return /src/i.test(cssText);
			}
			return !blacklist() && hasFontFaceSrc();
		}
		document.documentElement.classList.replace('no-js', 'js');
		if (window.matchMedia("(pointer: coarse)").matches) {document.documentElement.classList.add('touchevents')} else {document.documentElement.classList.add('no-touchevents')}
		if (supportsFontFace()) {document.documentElement.classList.add('fontface')}
	</script>
  	<script src="{{ 'jquery.min.js' | asset_url }}" defer="defer"></script>
  	<script src="{{ 'vendor.min.js' | asset_url }}" defer="defer"></script>
  	<script src="{{ 'ajax-cart.js' | asset_url }}" defer="defer"></script>

  	<!-- CSS ================================================== -->
	{% render 'css-variables' %}
	{% render 'css-include' %}
	{{ 'gift-card.css' | asset_url | stylesheet_tag }}

	<!-- JS after CSSOM=================================================== -->
  	<script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>
  	<script src="{{ 'custom.js' | asset_url }}" defer="defer"></script>
  	<script src="{{ 'vendor/qrcode.js' | shopify_asset_url }}" defer="defer"></script>

	<!-- Header hook for plugins ================================================== -->
  	{{ content_for_header }}
</head>
<body class="template-giftcard">

	{%- assign formatted_initial_value = gift_card.initial_value | money_without_trailing_zeros: gift_card.currency -%}
	{%- assign formatted_initial_value_stripped = formatted_initial_value | strip_html -%}

	<header class="giftcard__header u-text-center" role="banner">
	  	<div class="site-header__logo h2 u-text-center" itemscope itemtype="http://schema.org/Organization">
			<a href="{{ shop.url }}" class="site-header__link site-header__logo-link" itemprop="url">{{ shop.name }}</a>
	  	</div>

		<h1 class="h4">{{ 'gift_cards.issued.subtext' | t }}</h1>
		{% unless gift_card.enabled %}
			<p class="giftcard__tag">{{ 'gift_cards.issued.disabled' | t }}</p>
		{% endunless %}
		{% assign gift_card_expiry_date = gift_card.expires_on | date: "%d/%m/%y" %}
		{% if gift_card.expired and gift_card.enabled %}
			<p class="giftcard__tag">{{ 'gift_cards.issued.expired' | t: expiry: gift_card_expiry_date }}</p>
		{% endif %}
		{% if gift_card.expired != true and gift_card.expires_on and gift_card.enabled %}
			<p class="giftcard__tag giftcard__tag--active">{{ 'gift_cards.issued.active' | t: expiry: gift_card_expiry_date }}</p>
		{% endif %}
	</header>

	<div class="giftcard-wrapper">
	  	<main class="giftcard" role="main">
			<div class="giftcard__wrap">
		  		<img src="{{ 'gift-card/card.jpg' | shopify_asset_url }}" alt="">
		  		{%- assign initial_value_size = formatted_initial_value | size -%}
		  		
		  		<div class="h1 giftcard__amount{% if initial_value_size > 6 %} giftcard__amount--medium{% endif %}">
					{% if gift_card.balance != gift_card.initial_value %}
			 			<span class="giftcard__tooltip">
							<span class="giftcard__tooltip-label">{{ 'gift_cards.issued.remaining_html' | t: balance: gift_card.balance | money }}</span>
			  			</span>
					{% endif %}
					<strong>{{ formatted_initial_value }}</strong>
		  		</div>

				{%- assign code_size = gift_card.code | format_code | size -%}
				<div class="giftcard__code{% if code_size <= 25 %} giftcard__code--large{% elsif code_size > 25 and code_size <= 30 %} giftcard__code--medium{% else %} giftcard__code--small{% endif %}" onclick="selectText('GiftCardDigits');">
					<div class="giftcard__code__inner">
					  	<strong class="giftcard__code__text {% if gift_card.expired or gift_card.enabled != true %} disabled{% endif %}" id="GiftCardDigits">{{ gift_card.code | format_code }}</strong>
					</div>
				</div>
			</div>

			<p class="u-text-center">
		  		{{ 'gift_cards.issued.redeem_html' | t: value: formatted_initial_value_stripped }}
			</p>

			<div id="QrCode" class="giftcard__qr-code" data-identifier="{{ gift_card.qr_identifier }}"></div>

			<div class="u-text-center">
		  		<p><a href="{{ shop.url }}" class="c-btn c-btn--primary giftcard__shop-link" target="_blank">{{ 'gift_cards.issued.shop_link' | t }}</a></p>
		  		
		  		<p><button type="button" class="c-btn c-btn--grey giftcard__print-link" onclick="window.print();">{{ 'gift_cards.issued.print' | t }}</button></p>
		  	
			  	{% if gift_card.pass_url %}
					<p><a class="giftcard__apple-wallet" href="{{ gift_card.pass_url }}">
						<img class="giftcard__apple-wallet-image" src="{{ 'gift-card/add-to-apple-wallet.svg' | shopify_asset_url }}" width="120" height="40" alt="{{ 'gift_cards.issued.add_to_apple_wallet' | t }}">
				  	</a></p>
		  		{% endif %}

			</div>
	  	</main>
	</div>

	<script>
		//cart functions
		theme.ajaxCartInit = function() {
			ajaxCart.init({
				cartContainer: '#CartContainer',
				cartCountSelector: '#CartCount',
				cartCostSelector: '#CartCost',
				emptySelector: '#EmptyCart',
				{% if settings.cart_ajax %}
				triggerSelector: '.js-cart-trigger',
				formSelector: '.js-product-form',
				addToCartSelector: '.js-product-add',
				{% endif %}
				moneyFormat: {{ shop.money_format | json }}
			});
		};
	</script>

	<script type="text/javascript">
		window.addEventListener('DOMContentLoaded', function() {
		$(function() {
			var config = {
					qrCode: '#QrCode',
					giftCardCode: '#GiftCardDigits'
			};

			var $qrCode = $(config.qrCode);
			// eslint-disable-next-line no-new
			new QRCode($qrCode[0], {
					text: $qrCode.attr('data-identifier'),
					width: 120,
					height: 120
			});

			$(config.printButton).on('click', function() {
					window.print();
			});

			// Auto-select gift card code on click, based on ID passed to the function
			$(config.giftCardCode).on('click', {element: 'GiftCardDigits'}, selectText);
					function selectText(evt) {
						var text = document.getElementById(evt.data.element);
						var range = '';

						if (document.body.createTextRange) { // ms method
						range = document.body.createTextRange();
						range.moveToElementText(text);
						range.select();
						} else if (window.getSelection) { // moz, opera, webkit method
						var selection = window.getSelection();
						range = document.createRange();
						range.selectNodeContents(text);
						selection.removeAllRanges();
						selection.addRange(range);
						}
					}
			});
		});
	</script>
</body>
</html>